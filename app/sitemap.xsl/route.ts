// app/sitemap.xsl/route.ts

import { NextResponse } from 'next/server'

export async function GET() {
  const xsl = `<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" 
                xmlns:html="http://www.w3.org/TR/REC-html40"
                xmlns:sitemap="http://www.sitemaps.org/schemas/sitemap/0.9"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
				xmlns:image="http://www.google.com/schemas/sitemap-image/1.1"
  				xmlns:video="http://www.google.com/schemas/sitemap-video/1.1">
	<xsl:output method="html" version="1.0" encoding="UTF-8" indent="yes" />
	<xsl:template match="/">
		<html xmlns="http://www.w3.org/1999/xhtml">
			<head>
				<title>XML Sitemap</title>
				<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
				<meta name="robots" content="noindex,follow" />
				<style type="text/css">
					body {
						font-family:Helvetica, Arial, sans-serif;
						font-size:1em;
						margin:1em 2em 1em 2em;
					}
					#title {
						font-size:2em;
						font-weight:600;
					}
					#header {
						background-color:#e3ebf8;
						border:1px #35bdf6 solid;
						padding:5px 15px 5px 15px;
						margin:10px 0px 20px 0px;
					}
					
					#header p {
						line-height:	1.1em;
						margin: 0.5em 0 0.5em 0;
					}
					#header strong {
						font-weight:normal;
					}
					table {
						width:100%;
						font-size:0.8em;
					}
					tr {
						
					}
					tr:nth-child(odd) td {
						background-color: #e3ebf8 !important;
					}
					tbody tr:hover td {
						background-color: #aac8f5!important;
					}
					tbody tr:hover td, tbody tr:hover td a {
						color: #000 !important;
					}
					
					th {
						text-align:left;
						font-size:0.9em;
					}
					#table-head {
						background-color:#aac8f5;
						text-align:left;
						font-size:1em;
					}
					#footer {
						background-color:#e3ebf8;
						border:1px #35bdf6 solid;
						padding:0.5em 1em 0.5em 1em;
						margin:30px 0px 30px 0px;
						font-size:0.8em;
					}
					
					#footer a {
						color:#35bdf6;
					}
					
					a {
						color:black;
					}
				</style>
			</head>
			<body>
				<xsl:apply-templates></xsl:apply-templates>
				<div id="footer">
					Custom sitemap generated by <a href="http://www.dojoagency.com/" target="_blank">Dojo Agency</a>
				</div>
			</body>
		</html>
	</xsl:template>
	
	
	<xsl:template match="sitemap:urlset">
        <h1 id="title">XML Sitemap</h1>
        <div id="header">
			<p>You can find more information about XML sitemaps on <a href="http://sitemaps.org/" target="_blank">sitemaps.org</a>.</p>
        </div>
		<div id="content">
			<table cellpadding="5">
				<tr id="table-head">
					<th width="60%">URL</th>
					<th width="10%">Priority</th>
					<th width="15%">Change frequency</th>
					<th width="15%">Last modified (GMT)</th>
					<th width="15%">Images</th>
					<th width="15%">Videos</th>
				</tr>
				<xsl:variable name="lower" select="'abcdefghijklmnopqrstuvwxyz'"/>
				<xsl:variable name="upper" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
				<xsl:for-each select="./sitemap:url">
					<tr>
						<td>
							<xsl:variable name="itemURL">
								<xsl:value-of select="sitemap:loc"/>
							</xsl:variable>
							<a href="{$itemURL}">
								<xsl:value-of select="sitemap:loc"/>
							</a>
						</td>
						<td>
							<xsl:value-of select="concat(sitemap:priority*100,'%')"/>
						</td>
						<td>
							<xsl:value-of select="concat(translate(substring(sitemap:changefreq, 1, 1),concat($lower, $upper),concat($upper, $lower)),substring(sitemap:changefreq, 2))"/>
						</td>
						<td>
							<xsl:value-of select="concat(substring(sitemap:lastmod,0,11),concat(' ', substring(sitemap:lastmod,12,5)))"/>
						</td>
						<td>
						<xsl:for-each select="image:image">
							<xsl:value-of select="image:loc" />
							<br />
							<xsl:value-of select="image:title" />
							<br />
							<xsl:value-of select="image:caption" />
							<br />
						</xsl:for-each>
						</td>
						<td>
						<xsl:for-each select="video:video">
							<xsl:value-of select="video:content_loc" />
							<br />
							<xsl:value-of select="video:title" />
							<br />
							<xsl:value-of select="video:platform" />
							<br />
							<xsl:value-of select="video:description" />
							<br />
						</xsl:for-each>
						</td>
					</tr>
				</xsl:for-each>
			</table>
		</div>
	</xsl:template>
	
	
	<xsl:template match="sitemap:sitemapindex">
        <h1 id="title">XML Index Sitemap</h1>
        <div id="header">
            <p>Welcome to the main sitemap index file. See list below for list of all sitemap files.</p> 
			<p>You can find more information about XML sitemaps on <a href="http://sitemaps.org/" target="_blank">sitemaps.org</a>.</p>
        </div>
		<div id="content">
			<table cellpadding="5">
				<tr id="table-head">
					<th width="60%">URL of sub-sitemaps</th>
					<th width="40%">Last modified (GMT)</th>
				</tr>
				<xsl:for-each select="./sitemap:sitemap">
					<tr>
						<td>
							<xsl:variable name="itemURL">
								<xsl:value-of select="sitemap:loc"/>
							</xsl:variable>
							<a href="{$itemURL}">
								<xsl:value-of select="sitemap:loc"/>
							</a>
						</td>
						<td>
							<xsl:value-of select="concat(substring(sitemap:lastmod,0,11),concat(' ', substring(sitemap:lastmod,12,5)))"/>
						</td>
					</tr>
				</xsl:for-each>
			</table>
		</div>
	</xsl:template>
</xsl:stylesheet>`

  return new NextResponse(xsl, {
    headers: { 'Content-Type': 'application/xslt+xml' },
  })
}