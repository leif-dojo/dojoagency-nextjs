"use client"
import React, { useLayoutEffect, useState, useRef } from 'react'
import styles from './home_hero.module.scss'
import Logo from 'public/dojo_animated.svg'
import Arrow from 'public/icons/icon-arrow-down.svg'
import { useThemeContext } from '@/context/theme'
import { useIsMobile, hexToRgb, rgbToHex } from '@/utils/general'

import { gsap } from 'gsap'
import { ScrollTrigger } from 'gsap/dist/ScrollTrigger'
gsap.registerPlugin(ScrollTrigger)

import VideoPlayer from '../../generic/video_player/video_player'

export const typename = 'Set_Components_HomeHero'

const HomeHeroBlock = ({ block }: { block: any }) => {
  const { cursorType, cursorChangeHandler, color, colorChangeHandler, backgroundColor, backgroundChangeHandler} = useThemeContext();
  const sectionRef = useRef<HTMLDivElement>(null)
  const PanelRef = useRef<HTMLDivElement>(null)
  const LogoWrapRef = useRef<HTMLDivElement>(null)
  const LogoRef = useRef<HTMLDivElement>(null)
  const HeadlineRef = useRef<HTMLDivElement>(null)
  const VideoRef = useRef<HTMLDivElement>(null)
  const DownRef = useRef<HTMLDivElement>(null)
  const RainRef = useRef<HTMLDivElement>(null)

  const isMobile = () => {
    return window.innerWidth < 1024
  }

  useLayoutEffect(() => {
    let ctx = gsap.context(() => {

      //set initial colors
      const TextColor = '#FFFFFF';
      const BackgroundColor = '#304A5F';
      var rb = document.querySelector('body');
      rb.style.color = TextColor;
      rb.style.backgroundColor = backgroundColor;
      colorChangeHandler(hexToRgb(TextColor))
      backgroundChangeHandler(hexToRgb(backgroundColor))

      //Theme Colors
      const element = document.querySelector("body");
      const getter = gsap.getProperty(element);
      gsap
      .timeline({
        scrollTrigger: {
          trigger: sectionRef.current,
          start: "top 50%",
          end: "top 10%",
          scrub: true,
          // markers: true,
        },
      })
      .to(element, {
        color: `rgb(${hexToRgb(TextColor)})`,
        backgroundColor: `rgb(${hexToRgb(BackgroundColor)})`,
        ease: "none",
        onUpdate: (e) => {
          colorChangeHandler(getter("color"))
          backgroundChangeHandler(getter("backgroundColor"))
        }
      })
      

      gsap
      .timeline({
        scrollTrigger: {
          trigger: sectionRef.current,
          start: 'top bottom',
          //end: 'bottom bottom',
          //scrub: true,
          toggleActions: "restart none none reverse"
          //markers: true,
        },
      })
      .fromTo(
        LogoWrapRef.current,
        { autoAlpha: 0 },
        { duration: 1, autoAlpha: 1 },0
      )
      .fromTo(
        HeadlineRef.current,
        { autoAlpha: 0, y: "20%" },
        { duration: 0.5, autoAlpha: 1, y: "0%" },0.2
      )
      .fromTo(
        DownRef.current,
        { autoAlpha: 0, y: "20%" },
        { duration: 0.5, autoAlpha: 1, y: "0%" },0.4
      )
      .fromTo(
        VideoRef.current,
        { autoAlpha: 0, y: "20%" },
        { duration: 1, autoAlpha: 1, y: "0%" },0.6
      )

      //stories
      gsap
      .timeline({
        scrollTrigger: {
          trigger: PanelRef.current,
          start: isMobile() ? "top 180rem" : "top 340rem",
          end: "20% 0%",
          scrub: true,
          //end: "+=500",
          //markers: true,
          toggleActions: "play reverse play reverse",
        },
      }).fromTo(
        LogoWrapRef.current,
        {
          autoAlpha: 1
        }, {
          autoAlpha: 0,
        },0
      ).fromTo(
        HeadlineRef.current,
        {
          fontSize: isMobile() ? "90rem" : "110rem"
          //autoAlpha: 0
        }, {
          fontSize: isMobile() ? "100rem" : "150rem"
          //autoAlpha: 1
        },0
      )
      /*.fromTo(
        PanelRef.current,
        {
          backgroundColor: `rgb(${backgroundColor})`,
        }, {
          backgroundColor: `rgb(${backgroundColor})`,
        },0
      )*//*.set( LogoRef.current, {
        autoAlpha: 0,
      })*/

      // function to generate drops
      function makeitrain() {
        const rainSection = document.getElementById('rain');
        var increment = 0;
        var interval = 35;
        while (increment < 100) {
          loop(increment);
          increment++
        }

        function loop(i:any,){
          setTimeout(function () {
            var randoHundo = (Math.floor(Math.random() * (98 - 1 + 1) + 1));
            var randoFiver = (Math.floor(Math.random() * (5 - 2 + 1) + 2));
            var randolength = (Math.floor(Math.random() * (400 - 100 + 1) + 100));
            var randoopacity = Math.random();
            //drop container
            var drop = document.createElement('div');
            drop.classList.add(`${styles.drop}`);
            drop.classList.add(`drop`);
            drop.style.cssText = `height:${randolength}rem;opacity:${randoopacity};left: ${i}%; bottom: ${randoFiver + randoFiver - 1 + 100}%; animation-delay: 0.${randoHundo}s; animation-duration: 0.5${randoHundo}s;`;
            //rain stem
            var stem = document.createElement('div');
            stem.classList.add(`${styles.stem}`);
            stem.style.cssText = `animation-delay: 0.${randoHundo}s; animation-duration: 0.5${randoHundo}s;`;
            drop.appendChild(stem); 

            //add in a new raindrop with various randomizations to certain CSS properties
            //drop.innerHTML += `<div class='${styles.drop}' style="height:${randolength}rem;opacity:${randoopacity};left: ${increment}%; bottom: ${randoFiver + randoFiver - 1 + 100}%; animation-delay: 0.${randoHundo}s; animation-duration: 0.5${randoHundo}s;"><div class='${styles.stem}' style="animation-delay: 0.${randoHundo}s; animation-duration: 0.5${randoHundo}s;"></div><div class='${styles.splat}' style="animation-delay: 0.${randoHundo}s; animation-duration: 0.5${randoHundo}s;"></div></div>`;
            //backDrops += '<div class="drop" style="right: ' + increment + '%; bottom: ' + (randoFiver + randoFiver - 1 + 100) + '%; animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;"><div class="stem" style="animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;"></div><div class="splat" style="animation-delay: 0.' + randoHundo + 's; animation-duration: 0.5' + randoHundo + 's;"></div></div>';
            rainSection?.appendChild(drop);  
          }, i * interval);
        }
      }

      function stoprain() {
        let drops = Array.from(document.querySelectorAll(".drop"));
        drops.sort((a,b) => 0.5 - Math.random()).forEach((drop:any,i:any) => {
          setTimeout(() => {
            drop.remove()
          }, i * 15);
        });
      };

      function setSignaturePaths() {
        let totalDur = 7
        // get all SVG elements - lines and dots
        const paths = sectionRef.current.querySelectorAll('.autograph__path')
        // prepare path length variable
        let len = 0
        // prepare animation delay length variable
        let delay = 0

        // escape if no elements found
        if (!paths.length) {
          return false
        }

        // set duration in seconds of animation to default if not set
        const totalDuration = totalDur || 5

        // calculate the full path length
        paths.forEach((path) => {
          const totalLen = path.getTotalLength()
          len += totalLen
        })

        paths.forEach((path) => {
          const pathElem = path
          // get current path length
          const totalLen = path.getTotalLength()
          // calculate current animation duration
          const duration = totalLen / len * totalDuration

          // set animation duration and delay
          pathElem.style.animationDuration = `${duration < 0.1 ? 0.1 : duration}s`
          pathElem.style.animationDelay = `${delay}s`
          pathElem.setAttribute('data-duration', `${duration < 0.1 ? 0.1 : duration}`);

          // set dash array and offset to path length - this is how you hide the line
          pathElem.setAttribute('stroke-dasharray', totalLen)
          pathElem.setAttribute('stroke-dashoffset', totalLen)

          // set delay for the next path - added .5 seconds to make it more realistic
          delay += duration + 0.1
        })

        return true
      }

      setSignaturePaths()

      function setTreePaths() {
        let totalDur = 7
        // get all SVG elements - lines and dots
        const paths = sectionRef.current.querySelectorAll('.tree__path')
        // prepare path length variable
        let len = 0
        // escape if no elements found
        if (!paths.length) {
          return false
        }
        // calculate the full path length
        paths.forEach((path) => {
          const totalLen = path.getTotalLength()
          len += totalLen
        })
        paths.forEach((path) => {
          const pathElem = path
          // get current path length
          const totalLen = path.getTotalLength()
          // set dash array and offset to path length - this is how you hide the line
          pathElem.setAttribute('stroke-dasharray', totalLen)
          pathElem.setAttribute('stroke-dashoffset', totalLen)
        })
        return true
      }

      setTreePaths()

      const treestart = '';
      const treeend = "m423.09 261.99c1.838 0.259 2.097-1.079 3.721-1.033 0.269-0.014 0.289-0.268 0.619-0.206 0.035-0.513 0.041-1.005-0.411-1.035-0.315-0.049-0.026-0.34 0.203-0.414 1.532-0.52 2.294 0.849 3.314 1.449-0.046 0.594 0.05 1.051 0.416 1.239 0.381 0.721 0.787 1.422 1.65 1.654h0.208c2.66 0.401 5.949 1.672 7.451-0.621 0.26 0.865 2.437 1.223 3.097 0.416 0.127-0.013 0.249-0.03 0.208-0.205 0.274-0.379 0.589-1.25 0.208-1.658 0.843 0.197 1.112 0.962 1.863 1.244 0.314 0.916 2.503 0.748 3.102 0.203-0.01-0.811-0.097-1.554-0.412-2.066 0-0.678-1.05-1.368 0.412-1.241 0.126 0.013 0.249 0.03 0.207 0.203-0.167 0.589 0.295 0.535 0.209 1.038-0.584 0.865 1.721 0.619 2.066 1.24 0.015 0.125 0.036 0.244 0.213 0.207 0.481 0.474 1.853 0.072 2.686 0.205 0.097 1.145 0.776 1.716 1.654 2.07 0.244 0.1 0.462 0.221 0.62 0.411 1.167 0.974 3.278 1.003 5.172 1.244h1.239c1.416 0.254 1.791-1.438 3.105-0.619-0.02 0.358 0.046 0.642 0.208 0.825h1.031c1.025 0.589-0.295 0.624-0.411 1.241-0.036 1.142-0.097 2.251-0.412 3.104-0.137 0.698 0.265 1.925-0.208 2.276h-0.208c0.081 1.83-0.589 3.922 0 5.586-1.857-0.547 2.392 0.988 0 1.034h-0.828c-0.938-0.031-1.618-0.318-2.277-0.622 0.015-0.68 0.593-0.79 1.237-0.825v0.203c0.366-0.119 1.219 0.254 1.249-0.203-0.568-0.47-1.151-0.919-2.065-1.038 0.192-0.559 1.705 0.2 1.649-0.619-0.889-0.769-1.954-1.353-2.894-2.07h-0.208c-0.046-0.232-0.228-0.321-0.416-0.412-0.361-0.34-2.127-0.34-2.477 0-1.208-0.104-2.153 0.061-2.899 0.412-0.797 0.029-0.822 0.84-1.451 1.037 0-0.41-0.563-0.267-0.411-0.83 1.035 0.052 1.167-1.932 0-1.86-0.396-0.086-0.894-0.071-0.828-0.619 0.365-0.119 1.214 0.249 1.239-0.206h0.415v0.206c0.529-0.028 0.808-0.302 0.828-0.83-0.604-0.637-1.787-1.792-2.279-1.858-0.493 0.08-0.446-0.381-1.029-0.207-0.473-0.566-1.682-0.392-2.691-0.418 0.061-1.578-1.7-1.328-1.863-2.687h-1.238c-0.156-0.403-1.532-0.308-1.451 0.206h-1.031c-0.091-0.34-1.563-0.34-1.655 0-0.045 0.232-0.232 0.318-0.415 0.416-0.493 0.124-0.939 0.294-1.661 0.203-1.974 0.921-2.866 2.919-4.339 4.345 0.162 0.046 0.411 9e-3 0.415 0.211h1.656c0.487 0.404 1.786 5e-3 1.857 0.825 0.518 0.932 1.015 1.883 1.659 2.689-0.167 0.736 1.28 0.906 0.619 1.447h-0.619v0.416c0.112 1.084-1.197 2.449-2.07 1.241h-0.208c-0.954-0.287-1.954-0.524-3.31-0.416h-0.204c-0.278 0.416-0.923 0.462-1.445 0.619-1.347 0.056 0.04-0.919 0.203-1.241-0.052-0.391 0.228-0.457 0.208-0.827 0.238-0.241 0.228-0.729 0.208-1.239-0.188-0.791 0.335-1.324 0-1.658-0.27-0.285-0.904-0.204-1.452-0.204-1.065 0.782-1.934-0.406-2.478-0.827h-1.035c-0.659-0.176-0.786 0.184-1.035 0.413-0.854-0.249-1.147-1.058-1.868-1.449h-0.203c-0.756-0.065-1.152 0.233-1.65 0.417v0.413c-0.091 0.392 0.279 1.246-0.416 1.033-0.416-0.134-0.137-0.97-0.624-1.033-0.66-0.048-0.869 0.362-1.649 0.206-0.736 0.781-1.706 1.334-2.898 1.654v0.412c0.329 0.293 0.528 0.713 0.619 1.242h-2.072v0.207h-0.411c-0.283 1.572-2.694 1.027-3.517 2.072 0.101 0.866 1.654 0.271 1.868 1.031-0.67 0.645-0.955 1.667-1.66 2.275 0.106 0.653-0.371 0.729-0.208 1.447 0.233 0.044 0.325 0.23 0.416 0.414 0.65-0.033 1.249-8e-3 1.452 0.416 0 0.484-0.361 0.607-0.214 1.239 0.163 0.045 0.405 8e-3 0.422 0.208 1.406 0.24 1.781-0.557 2.477-1.033 0.265-0.292 0.899-0.203 1.447-0.208 0.36-0.67 0.543 0.54 1.238 0.208 0.173-0.244 0.274-0.557 0.209-1.036 0.015-0.127 0.029-0.246 0.213-0.208h0.207c0.772 0.736 3.133 0.141 4.341 0 0.279 0.01 0.452-0.096 0.614-0.205 0.249-0.236 0.735-0.236 1.249-0.208 0.451-0.43-0.184-0.668 0.203-1.034 0.299-0.113 1.075 0.244 1.034-0.205 0.052-0.162 0.174-0.24 0.417-0.205h0.411c1.249-0.2 2.025-0.873 3.523-0.832 0.03 0.24 0.318 0.226 0.614 0.207v0.211c-0.088 0.336 4.015 0.336 3.929 0 0.827-0.547 1.883 0.455 3.105 0.205h0.412c0.081 0.674 1.021 0.5 1.654 0.619 1.675-0.119 3.107-0.48 4.346-1.035h0.207c0.67-0.049 0.995 0.246 1.031 0.83-0.188 0.367-0.757 0.34-0.823 0.828-0.151 0.81-1.436 0.492-1.653 1.238-0.062 0.426-0.559 0.416-0.828 0.622-0.645-0.019-1.157 0.091-1.452 0.414-0.817-0.077-1.984 0.19-2.481-0.206-0.254-0.023-0.487-0.064-0.412-0.414h-1.857c-0.741-0.322-0.131 0.701-0.629 0.62-0.184-0.366-0.381-0.722-1.03-0.62h-1.447c-0.909 1.284-3.219 0.295-2.685-1.035-0.503 0.124-1.508-0.259-1.66 0.205-0.589-0.041-1.132-0.025-1.036 0.619-0.177 0.652-0.792 0.861-1.447 1.036v0.209c-1.67 0.817-4.024 0.938-6.41 1.032-0.035 0.587-0.984 0.262-0.827 1.035-0.274 0.071-0.33 0.362-0.619 0.416-0.051 0.229-0.234 0.317-0.422 0.412-0.325 0.561-2.543 1.23-1.238 2.07 0.127 0.01 0.243 0.031 0.208 0.206 0.767-0.013 1.309 0.208 1.863 0.411 1.289-0.223-0.103 1.02 0.619 1.449 0.518 0.175 1.111 0.273 1.862 0.207 1.086-1.118 4.229 0.521 4.756-1.451 0.503-0.322 0.919-0.738 1.244-1.241h1.238c-0.365 0.33-1.898 0.112-1.03 1.036 0.641-0.02 1.147 0.093 1.442 0.416 0.456-0.038 0.66 0.168 0.619 0.619h-2.478c-0.106 0.244-0.218 0.47-0.416 0.621 0.172 0.582-0.29 0.539-0.203 1.037-0.07 0.481-0.645 0.462-0.827 0.823 1.694-0.248 1.563 1.333 2.893 1.45h0.412c0.528-0.094 0.954-0.292 1.243-0.622 0.721-0.556 0.853-1.998 0-2.481 0.584 0.17 0.532-0.293 1.036-0.207 0.156-0.045 0.4-6e-3 0.416-0.207 0.34-0.274 0.065-1.176 0.411-1.449h0.826c0.031-0.381 0.701-0.122 0.828-0.411 0.046-0.396-0.239-0.46-0.208-0.833-0.481-0.411-1.106-0.682-1.239-1.443 0.295-0.054 0.347-0.343 0.619-0.412-0.035-1.137 1.94-0.267 2.483-0.83 0.065-0.027 0.137-0.051 0.203-0.072 0.015-0.012 0.024-0.012 0.035-0.014 0.061-0.021 0.116-0.037 0.178-0.049 0.01-2e-3 0.02-2e-3 0.024-0.01 0.066-0.013 0.133-0.027 0.203-0.045 0.082-0.016 0.153-0.025 0.234-0.038 0.975-0.032 1.792 0.627 3.051 0.435v0.207h3.106v-0.207c0.36-0.115 1.214 0.252 1.244-0.207h1.029c0.508-0.178 1.433 0.054 1.447-0.621 0.289 0.01 0.452-0.094 0.62-0.209 0.863-0.233 1.548-0.659 2.278-1.032h0.619c0.909-0.119 1.646-0.425 2.066-1.036 0.858-0.109 1.218-0.715 1.868-1.032 0.761-0.202 1.178-0.741 2.269-0.62h1.04c0.763 0.129 2.057-0.266 2.479 0.209 0.675 0.086 1.786-0.271 1.862 0.411 0.609 0.152 1.011 0.497 1.451 0.827 0.28-8e-3 0.452 0.096 0.615 0.205 0.731-0.229 0.817 1.236 0.624 1.245 0.254 0.567 1.208 0.442 1.447 1.032 0.531 0.297 1.172 0.486 1.244 1.238-0.433 0.34-0.523 0.998-0.833 1.457-0.306 0.855-0.584 1.752-1.244 2.271-0.045 0.637-0.446 0.927-0.614 1.447-0.198 0.567-0.635 0.881-0.827 1.448 5e-3 0.63-0.432 0.803-0.62 1.239-0.289-5e-3 -0.456 0.096-0.624 0.208-0.533 0.429-1.229 0.705-2.07 0.825-2.691 0.689-5.473 1.284-8.274 1.863-1.122-0.095-0.244 1.208-0.619 1.448-0.771 0.13-1.3 0.492-2.065 0.622-0.895-0.271-0.655 0.588-1.031 0.824-0.294 0.955-1.635 0.852-2.279 1.452-0.29 0.333-1.026 0.216-1.244 0.62-0.371 0.591-1.173 0.756-1.445 1.449 0 0.067-0.016 0.127-0.021 0.18-0.081 0.081-0.157 0.165-0.233 0.249-5e-3 0.01-0.016 0.017-0.02 0.024-0.077 0.09-0.148 0.176-0.214 0.267-0.492 0.051-1.208-0.431-1.376 0.106v0.206c-0.152 1.908-0.492 3.646-1.243 4.968v0.202h-0.203c-0.492 0.886-1.081 1.676-0.828 3.313-0.116 1.701 0.498 2.673 1.655 3.101h0.619c0.102-0.651-0.375-0.729-0.207-1.448 0.517 0.178 1.105 0.273 1.856 0.208 0.017-0.127 0.036-0.246 0.215-0.208 0.264-0.011 0.288-0.265 0.624-0.205 0.613 0.302 1.146 0.472 1.856 0 0.168 0.038 0.204 0.205 0.412 0.205 0.051 0.365 0.36 0.472 0.827 0.414h0.417c0.345-0.193 0.726-0.765-0.208-0.619-0.254-0.086-0.422-0.265-0.412-0.62h1.452c0.239 0.036 0.36-0.045 0.406-0.208 0.4 0.678 1.826 1.814 3.105 2.276v0.205c0.549 0.211 0.021 1.507 1.036 1.242-0.071-0.282-0.299-0.396-0.208-0.828 0.391 0.046 0.452-0.232 0.823-0.205 0.289 0.513 1.091 0.37 1.445 0.205 0.371 0.122 1.219-0.249 1.249 0.206h0.411v0.208c1.274 0.035 0.924 1.698 2.279 1.655 1.031-0.097 0.569-1.988 0-2.274v-0.209c0.076-0.356-0.309-0.527 0-0.618 0.65 0.104 0.548-0.714 1.031-0.205 0.34 0.421 0.313 1.202 0.827 1.443-0.052 0.391 0.233 0.456 0.202 0.827h0.833c0.63 0.152 0.609-0.354 1.243-0.205 0.452-0.797 2.144-0.468 1.858-1.447-0.629-0.261-1.051 0.705-1.238 0.205h-0.412c-0.218-0.469-0.812-0.572-1.035-1.034-1.034-0.765-1.259-3.922 0.203-4.341 1.04-0.075 1.584 0.348 2.279 0.617 0.386 0.028 0.686 0.137 0.822 0.419 0.757 4e-3 0.67 0.848 1.244 1.032h0.417l1.861-3.309c-0.269-0.358-1.237-6e-3 -1.243-0.625 6e-3 -0.82 0.803-0.848 1.446-1.033 0.757-0.271 1.386-0.686 1.858-1.243 0.654-0.521 2.422 0.071 3.106-0.414 1.32-1.779 3.579-2.627 4.554-4.754 0.065-0.484 0.213-0.894 0.624-1.033 0.3-0.729 0.554-1.51 1.238-1.865v-0.41c0.294-0.523 0.498-0.815 0.208-1.452v-0.206c0.057-0.624-0.232-1.609 0.406-1.657 0.939-2.574 3.335-3.701 5.792-4.754 1.294-0.016 2.198-0.419 3.315-0.622 0.563 0.149 0.416-0.411 0.826-0.411 1.671-0.586 1.803 1.094 2.899 1.652v0.207c0.045 0.293 0.334 0.349 0.411 0.621 0.492 0.608 0.726 1.477 1.649 1.653 0.365 0.471 1.021 0.644 1.659 0.828h0.417c0.045 0.643 0.73 0.646 1.238 0.825 0.162 0.048 0.406 0.01 0.416 0.21 0.401 0.666 1.762 0.368 2.808 0.394l0.147 0.133c0.06-0.028 0.105-0.063 0.146-0.112 0.036-0.021 0.062-0.043 0.092-0.062 5e-3 -5e-3 0.011-7e-3 0.011-7e-3 0.03-0.021 0.055-0.038 0.064-0.056 0 0 6e-3 -8e-3 0.012-0.013 0.01-0.016 0.024-0.028 0.035-0.043v-5e-3c5e-3 -0.016 0.01-0.031 0.01-0.04v-0.012c0-0.01-5e-3 -0.022-0.01-0.032v-0.011c-0.011-0.01-0.025-0.018-0.035-0.03l-6e-3 -8e-3c-0.016-5e-3 -0.03-0.015-0.04-0.022l-0.011-2e-3c-0.02-8e-3 -0.036-0.016-0.061-0.023 0 0-0.01-3e-3 -0.015-0.01 0 0-0.047-0.011-0.076-0.013l-0.012-3e-3c-0.024-8e-3 -0.061-0.013-0.061-0.013l-0.025-3e-3c-0.03-8e-3 -0.065-0.01-0.101-0.017h-0.011c-0.035-3e-3 -0.066-3e-3 -0.066-3e-3l-0.046-8e-3c-0.075-4e-3 -0.141-4e-3 -0.213-8e-3h-5e-3c-0.035 0-0.076 0-0.111 4e-3h-0.071l-0.589-0.477c0.011-0.012 0.025-0.032 0.04-0.053 0.021-0.023 0.036-0.043 0.062-0.068-0.106-0.015-0.203-0.033-0.31-0.054l-1.143-0.979c-0.335-0.29-0.654-0.586-1.035-0.828-0.036-0.167-0.208-0.204-0.208-0.412-0.112-0.716-1.599-1.847-2.269-2.691 0.391 1.192 1.421 1.741 2.065 2.691-0.853-0.526-1.35-1.407-2.065-2.069-0.215-0.271-0.208-0.762-0.416-1.033-0.098-0.396 0.273-1.248-0.423-1.035-0.137-1.262-1.878-2.648-3.507-3.107-0.046-0.387 0.233-0.453 0.203-0.823-0.518 0.026-0.645-0.328-1.036-0.414-1.177 0.142-1.715-0.353-2.898-0.206-0.761-0.15-0.877 0.35-1.654 0.206 0 0.271-0.569 0.263-0.614 0 0.441-0.937 1.03-1.728 2.269-1.863 0.314-0.241 0.513-0.597 1.036-0.62 0.192-0.363 0.467-0.639 0.833-0.824 0.36-0.188 0.634-0.465 0.826-0.832 0.153-0.42 0.619-0.842 1.036-0.411-0.046 1.903 1.808 1.911 2.686 2.896v0.205c1.065-0.041 2.386 0.18 2.481-0.824-0.156-0.539-1.051-0.959-0.619-1.447h1.244c0.466-0.223 0.076-1.305 0.202-1.863h2.067c0.775-0.512 0.416-1.619 0.624-2.278h0.624c1.74 0.162 2.848-0.317 4.544-0.206h0.208c0.694-0.41 1.253-0.957 1.868-1.449v-0.619c-0.127-0.355-0.985 0.016-1.041-0.413-1.249 0.354-0.803-0.988-1.65-1.034-5e-3 -0.553 0.071-1.186-0.208-1.446h-0.827c-0.67 0.117-0.965-0.145-1.452-0.208-0.278-0.269-0.197-0.898-0.203-1.447h-1.035c0-0.213-0.167-0.248-0.203-0.412-0.913 0.072-0.762-0.902-1.863-0.621h-0.416c-0.366 0.117-1.213-0.256-1.238 0.201-0.862-0.029-0.73 0.929-1.654 0.832-0.062 0.039-0.112 0.08-0.162 0.133-0.615 0.451-1.723 0.427-2.529 0.693-0.045 0.235-0.228 0.322-0.416 0.413-0.401 0.084-0.015 0.947-0.827 0.619-0.122-0.667 0.143-0.959 0.208-1.448v-0.822c-0.285-0.069-0.4-0.297-0.828-0.213v-0.207c0.534-0.472-1.055 0.09-1.237-0.414 0.01 0.037 2.218-3.479-0.63-2.685h-0.609c-0.284-0.541-0.426-2.815-2.076-1.862v0.205c-0.381 0.027-0.69 0.139-0.822 0.414-0.599-0.041-1.056 0.055-1.244 0.413-0.792 0.177-1.553 0.38-1.649 1.241-1.081 0.033-2.065 0.15-2.898 0.414-0.305 0.388-1.142 0.243-1.035 1.033-0.116 0.736 0.73 0.51 0.619 1.24-0.351 0.42-0.559 0.965-1.238 1.039-0.844 0.295-1.6 1.194-1.238 2.068 0.03 0.243 0.325 0.225 0.614 0.207h0.624c0.437 0.419-0.062 0.82-0.208 1.239 0.01 0.358-0.047 0.642-0.208 0.827 0.264 0.013 0.288 0.265 0.624 0.205 1.041 0.336 2.908-0.151 3.508 0.621-0.098 0.725-0.306 1.349-0.208 2.275 0.01 0.132 0.035 0.244 0.208 0.205 0.486 0.072 0.775 0.331 1.445 0.211 1.007 0.645 2.27-0.216 2.691-0.83 0.173-0.038 0.208-0.205 0.416-0.205-0.045 1.4-2.061 2.627-2.893 3.934-0.081 0.604-1.219 0.166-1.452 0.619-1.122 0.188-1.706 0.906-2.686 1.239-0.68 0.494-1.021 1.329-1.654 1.863-1 0.578-1.863-0.754-3.107-0.62v-0.211c-1.076-0.296-1.36-1.391-2.269-1.857v-0.209c-0.848-0.74-1.334-1.847-1.659-3.101v-0.622c-0.402-0.284-0.112-1.27-0.417-1.656-0.162-1.633-2.198-1.382-1.857-3.516v-1.239c0.03-0.797 0.461-1.19 1.035-1.448 1.111 0.397 0.909 2.121 2.69 1.862 0.37-0.18 0.645-0.46 0.822-0.83h3.101c0.37 0.025 0.441-0.252 0.838-0.206-0.036-0.802 0.151-1.813-0.417-2.066 0-0.344-0.578-0.118-0.629-0.416-0.021-0.369 0.208-0.484 0.629-0.415 0.183-0.089 0.371-0.181 0.417-0.414 0.228-0.65-0.336-0.5-0.417-0.827 0.273-0.064 0.391-0.292 0.828-0.206 0.873 0.063 0.208-1.104 0.203-1.449 0.237-0.099 0.472-0.223 0.624-0.413 0.046-0.16 0.173-0.242 0.41-0.207h1.036c0.091-0.524 0.406-0.839 0.822-1.031 0.208 0 0.249-0.17 0.416-0.211h0.209c0.233-0.99-0.787-0.727-1.036-1.238 0.655-0.288 1.823-0.288 2.487 0 0.354-0.016 0.635 0.045 0.816 0.205v0.207c0.469 0.16 0.813 0.435 1.453 0.412 0.669 0.302 1.736 0.197 2.686 0.211 0.751-0.284 1.675-0.404 1.868-1.244 0.075-1.248-0.813-1.535-0.625-2.898h0.833v0.211c0.878 0.121 1.364-0.147 2.065-0.211 0.051-0.599-0.391-0.713-0.62-1.035h-0.416c-0.513-0.379-1.294-0.492-1.862-0.82h-0.198c-0.533-0.227-1-0.525-1.249-1.037-0.35 0.012-0.527-0.161-0.619-0.412h-0.416c-0.091-0.188-0.178-0.373-0.406-0.416-0.151-0.411-0.635-0.473-0.833-0.827-0.142-0.647-0.553-0.269-1.029-0.209-0.127 0.013-0.244 0.033-0.208 0.209v0.413c-0.193 0.363-0.387 0.721-1.031 0.619-0.745-0.713-1.406-1.499-1.248-3.102-0.239 0.037-0.365-0.047-0.411-0.205-0.822-0.078-1.98 0.188-2.483-0.209-0.086-0.434 0.144-0.547 0.209-0.826v-0.209c-0.346-0.621-1.025-0.908-1.446-1.443-0.772 0.145-0.519-0.73-0.828-1.033-1.03-2.951 2.127-3.938 1.447-6.625 0.156-0.037 0.208-0.205 0.416-0.205h0.411c0.04-0.307 0.497-0.191 0.827-0.207 0.66-0.512 1.979-0.359 2.898-0.619h0.406c0.224-0.474 1.305-0.082 1.863-0.207 0.492-0.475 1.857-0.078 2.686-0.207 1.527-0.338 3.359-0.371 4.553-1.035 0.624-0.201 0.822-0.836 1.452-1.034 0.487-0.497 0.816-1.472 1.649-1.035-0.121 0.431 0.26 1.362-0.209 1.446-1.034 1.142 0.271 2.889 1.249 3.31 1.543-0.373 1.695 0.652 2.894 0.625 0.056-0.43 0.909-0.059 1.036-0.417v-3.102c-0.066-0.762 0.178-1.834-0.208-2.279-0.031-0.723 0.061-1.32 0.416-1.652 0.091 0.184 0.178 0.37 0.416 0.414-0.051 0.389 0.229 0.454 0.203 0.825 0.127 0.015 0.243 0.033 0.203 0.213 0.776 0.33 0.711 1.5 1.035 2.272h0.832c0.955-0.352 0.777-1.836 1.239-2.691 0.046-0.865 1.117-0.686 1.239 0 1.05 0.404 1.796 1.107 2.694 1.657 0.224 0.53 1.106 0.405 1.858 0.414 0.325 0.508 0.127 1.528 1.03 1.448h0.209v0.205c0.34 0.283 0.512 0.732 1.237 0.623 1.519 0.621 2.452 1.83 4.143 2.271h2.065c1.335-0.297 0.817 1.259 2.279 0.83 0.635-0.66-0.345-0.865-0.208-1.657 0.208 0 0.244-0.168 0.417-0.206 0.147-0.165 1.156-0.459 1.238 0 0.167 0.588-0.289 0.536-0.208 1.033v0.417c0.146 0.616 0.822 0.69 1.66 0.619 0.567-0.254 1.105-0.548 1.862-0.619-0.127 0.88 0.143 1.365 0.203 2.065 0.066 0.283 0.294 0.401 0.203 0.83-0.178 0.66 0.335 0.64 0.416 1.035h1.239c0.35-0.353 1.126-0.259 1.446-0.621 0.386-0.387 1.102-1.912 1.659-0.828 0.482 0.068 0.782 0.322 1.447 0.207h0.416c0.452 0.035 0.66-0.172 0.619-0.623 0.295-0.051 0.239-0.451 0.411-0.619 0.569 0.146-0.151-0.973 0.417-0.827 0.619 0.624 0.847 1.64 1.868 1.862v-0.211c-0.239-0.039-0.325-0.223-0.422-0.41-0.36-0.186-0.635-0.463-0.827-0.827-0.062-0.488-0.711-0.384-0.619-1.033 0.396 0.368 0.964 0.558 1.244 1.033h0.202c0 0.21 0.36 0.261 0.422 0 0.232 0.034 0.218 0.323 0.208 0.618-0.36 0.082-0.533-0.307-0.63 0 0.295 0.059 0.238 0.457 0.422 0.619 0.477 0.071 0.842 0.25 1.237 0.418h0.62c0.208 4e-3 0.249-0.168 0.411-0.207 0.086-0.5-0.376-0.448-0.203-1.035-0.319-0.035-1.07-1.112-0.208-1.033h0.208c1.116 0.158 1.676-0.26 2.686-0.208 0.188-0.054 0.319-0.122 0.405-0.205h6e-3v-3e-3c0.649-0.589-0.746-1.764-1.238-2.066-0.3-0.117-0.503-0.322-0.62-0.619v-0.623c-0.34-1.242-0.259-2.912-1.035-3.725-0.857-0.381-1.437-1.046-2.269-1.445h-0.422c-0.011-0.131-0.025-0.242-0.202-0.209-1.447 0.137-1.879 1.289-2.691 2.073h-0.208c-0.172 0.485-1.065-0.015-1.239-0.213-1.399 0.228-1.751-0.594-2.278-1.239h-0.416v-0.207h-1.858c-0.208 0-0.244-0.168-0.416-0.205 0.103-2.101-2.132-1.867-3.101-2.897v-0.205c-0.874 0.112-0.388-1.129-0.828-1.449-0.304-0.175-0.437-0.521-0.416-1.034 0.959-4e-3 0.969-0.969 2.071-0.832h1.034v-0.199c0.904 0.07 0-1.66 0.828-1.655 0.559-0.13 1.641 0.259 1.858-0.211 0.553 0 1.218 0.112 1.243-0.414-0.396-0.081-0.162-0.799-0.827-0.616-0.087-0.465-1.021-0.089-1.447-0.213-0.767 0.137-2.061-0.268-2.477 0.213h-0.416c-0.873 0.104-1.406-0.12-1.868-0.417-0.122-0.012-0.244-0.032-0.203-0.207v-0.209c-0.483-1.51 1.213-2.599 0.203-3.307h-0.203c-0.249-0.435-0.574-0.808-0.828-1.241-0.299 0.109-1.065-0.241-1.03 0.206 0 0.208-0.173 0.246-0.208 0.413h-0.417c-0.161-0.045-0.41-6e-3 -0.41-0.205 0.873-0.982 0.065-2.473-1.04-2.688-0.346-0.289-1.56-0.77-2.066-0.209-0.726 0.168-1.168 0.619-1.864 0.827-0.404 0.062-0.404-0.278-0.612-0.413-0.093-1.084-0.066-2.281-1.249-2.279h-0.203v-0.203c-1.548-0.375-1.548 0.795-2.483 1.035-0.411 0-0.259 0.564-0.827 0.412-0.142-1.037-0.197-2.15-1.66-1.861-0.354 0.125 0.021 0.982-0.405 1.031-0.392 0.051-0.462-0.233-0.832-0.207-0.797-0.235-0.854-1.209-2.066-1.032h-0.62c-1.284-0.743-1.847 1.231-1.237 2.276-0.184 0.447-0.514 0.731-1.249 0.623v-0.209c-0.152-0.048-0.411-4e-3 -0.411-0.213h-1.239c-0.802 0.047-1.528 0.012-2.071-0.201-1.101-0.137-1.771 0.158-2.269 0.623-0.325 1.561 0.726 1.746 1.239 2.479-0.706 0.368-0.27 1.327 0 1.86-0.487 0.41-1.32 0.477-2.279 0.416v-0.205c-0.011-0.27-0.264-0.291-0.209-0.625-0.016-0.125-0.025-0.243-0.202-0.205-0.859-0.187-0.904-1.168-1.863-1.241-0.046 0.162-0.173 0.235-0.417 0.208 0.117 0.988 0.65 1.561 1.036 2.273v0.828c-0.34 0-0.117-0.574-0.411-0.619-0.036 0.31 0.071 0.761-0.208 0.824-0.249-0.716-0.325-1.604-0.828-2.068v0.625c-0.243-0.036-0.228-0.328-0.208-0.625-0.024-0.523-0.04-1.061-0.618-1.033 0.035-0.447-0.731-0.088-1.031-0.205-0.229 0.535-0.756 0.77-0.838 1.445-0.492 0.636-0.97 0.217-1.853 0.207-0.02-0.643 0.65-0.586 0.406-1.447-0.264-0.208-0.762-0.203-1.03-0.413-0.27-0.356-0.432-0.815-1.03-0.825-0.827 0.061-1.046-0.48-1.868-0.417-0.011-0.261-0.265-0.284-0.208-0.619-0.076-0.817-1.305-0.485-1.447-1.241 0.011-0.287-0.096-0.453-0.208-0.619h-0.411c-0.457-0.674-1.563 0.371-1.649-0.418 0.01-0.355-0.046-0.643-0.208-0.828-1.229-0.118-2.198 0.018-2.487 0.828-0.559 0.154-0.416-0.408-0.827-0.414-0.244-0.098-0.467-0.215-0.62-0.414-0.675-0.012-0.792-0.584-1.649-0.411v-0.207c-0.604-0.022-1.36 0.112-1.654-0.206 0.105-0.301-0.244-1.069 0.198-1.036 0.11-0.937-0.306-1.347-1.239-1.241h-0.208v-0.205c-1.223-0.394-3.858-0.414-4.345 0.619-1.26 0.598-2.863 0.855-3.93 1.655-0.478 0.421-1.508 0.289-2.07 0.621h-0.619v0.622c-0.519 0.638-1.549-1.053-2.066-0.414-0.767-0.131-1.233-0.561-2.274-0.415h-0.207c-0.22-0.677-3.28-0.5-3.107-0.206-0.381 0.439-1.645 2e-3 -1.858 0.621-0.396 1.15 1.138 1.871-0.41 1.861-0.559 0.287-1.822 0.929-1.244 1.654-0.355 0.473-1.579 0.078-2.279 0.21h-2.893c-0.188-0.093-0.371-0.187-0.412-0.416-0.559-0.413-1.746-1.284-2.695-0.618-1.018 1.248-1.098 2.66-0.852 3.931 0.015 4e-3 0.014-9e-3 0.028-5e-3v0.207c0.823-0.067-0.918 0.164 0 0-0.014-0.065-0.016-0.135-0.028-0.202-0.965-0.212-0.273 1.227-0.799 1.444-0.232-0.041-0.319-0.23-0.41-0.414 0.029-0.513-0.325-0.64-0.416-1.035h-1.031c-0.65-0.094-0.929 0.183-0.832 0.83-0.675 0.289-0.351 1.578-1.035 1.86-0.036-0.235-0.325-0.224-0.62-0.209h-0.828c-0.867-0.243-0.37 0.876-0.826 1.034-0.046-0.154-0.173-0.238-0.411-0.204h-0.208c0-0.207-0.168-0.246-0.208-0.416h-1.452c-0.062-0.276-0.513-0.167-0.827-0.205-0.219 0.774 0.517 0.589 0.411 1.243 0.477 0.15 0.624 0.622 0.832 1.036-0.563 0.259-0.817 0.83-1.243 1.237-0.285 0.476-1.442 0.078-2.066 0.207-0.208 0-0.244 0.172-0.411 0.211 6e-3 0.617-0.021 1.259 0.619 1.238 0.507 0.118 1.274 0.518 0.208 0.618h-0.416c-0.446-0.03-0.092 0.736-0.208 1.034 0.705 0.604 1.873 0.748 2.686 1.243 0.045 0.307 0.502 0.188 0.832 0.206 0.295 0.472 1.437 0.078 2.07 0.208 0.914-0.226 1.026 0.35 1.65 0.413 1.249-0.141 1.36 0.848 2.695 0.621 0.721-0.515 1.472-1.006 2.482-1.242 0.776-0.396 1.527-0.811 2.894-0.62 0.016 0.264 0.264 0.287 0.213 0.62-0.05 0.162-0.016 0.41-0.213 0.414v0.412c-0.138 0.552-0.32 1.057-0.624 1.451v3.311c0.127 0.012 0.249 0.03 0.208 0.205 0.938 2.099 2.015 4.048 3.518 5.584 0.862-0.03 0.73 0.926 1.655 0.827v0.205c2.487 0.138 3.964 1.279 7.04 0.83 0.711-0.162 0.868 0.234 1.238 0.414-0.066 0.545 0.284 0.681 0.822 0.621 1.157 0.15 2.233 0.385 3.519 0.414 0.812 0.287 1.827 0.381 2.689 0.617 0.959 8e-3 1.025 0.911 1.655 1.246v1.033c-0.614 0.283-0.472 1.313-0.619 2.068 0.233 0.041 0.319 0.229 0.411 0.414-0.422-0.117-0.406-0.627-0.823-0.209-0.278-0.297-1.178-0.297-1.451 0-0.168 0.719 0.305 0.793 0.207 1.447-0.272 0-0.191-0.363-0.41-0.414-0.04 1.48-2.451 0.592-2.076 2.482v1.246c-0.741 0.013-0.162 1.346-0.614 1.65-0.802-0.039-1.528-3e-3 -2.071 0.205h-0.416c-1.319 0.385-0.665-2.878-1.237-3.927 0.796-1.683-2.412-2.638-1.66-1.657 0 0.211 0.172 0.247 0.208 0.414v0.208c-0.341 0.289-0.341 1.988 0 2.274h0.208c-0.046 0.164-0.173 0.24-0.416 0.205h-0.203c0.035-0.584-1.356 0.257-1.036-0.619 0.035-0.241 0.33-0.221 0.624-0.203v-1.243c0.229-1.054-1.472-0.187-1.243-1.241 0.299-0.109 1.071 0.24 1.035-0.209 1.158-0.57-0.355-1.766-0.624-2.273-1.777-0.262-2.675 0.357-3.31 1.24-0.057-0.424-0.549-0.41-0.827-0.619-0.392 0.047-0.452-0.232-0.828-0.207h-0.411c-0.634-0.196-0.878-0.771-1.654-0.827-0.446-0.171-0.706-0.536-1.447-0.414-0.36-0.345-2.126-0.345-2.482 0-9e-3 0.126-0.035 0.246-0.208 0.208-0.67 0.156-1.081 0.57-1.238 1.24v1.242c0.01 0.619 1.102 1.221 0.614 1.651-0.452-0.233-0.685-0.69-1.238-0.827-0.279-0.474-0.853-0.665-1.238-1.033-1.047 6e-3 -2.32-0.848-2.898-0.619-0.498-0.084-0.452 0.375-1.031 0.205-0.421-0.477-0.741 0.899-1.243 1.033-0.771-2.545-0.827-0.761-0.203 0.209h-0.208c-0.538-0.355-0.416-1.375-0.416-2.277-0.89-0.073-1.376-0.553-2.279-0.618h-0.203v-0.206c-0.681-0.916-0.65 1.099-1.036 0.414-0.492-0.066-0.386-0.721-1.035-0.622-0.061-0.425-0.554-0.411-0.822-0.619h-0.416c-0.533-0.384-2.355-0.29-2.899 0 0.173-0.587-0.288-0.536-0.207-1.036m18.692-25.192c0.096 0.655 0.218 1.698 0.405 2.308-0.187-0.609-0.309-1.65-0.405-2.308zm13.579 8.853v0.828c-0.215 0-0.244 0.167-0.417 0.206 0.035 1.271-0.167 2.791 0.417 3.515v-0.414c0.461 0.028 0.091 0.878 0.207 1.244-0.126 0.629 0.265 1.778-0.207 2.069 0 0.207-0.163 0.244-0.215 0.414-0.091 0.731-0.924 0.727-0.816 1.654-0.375-0.027-0.442 0.256-0.832 0.207-1.163 0.133-1.28-0.791-2.274-0.826-0.382-0.035-0.695-0.141-0.828-0.414-0.355-0.476-1.584-0.078-2.278-0.207-0.904-0.961-1.564-2.162-1.858-3.728h0.411c0.447-0.521 0.853-1.079 1.239-1.651 0.04-0.166 0.208-0.205 0.208-0.412 0.883-0.36 1.553-0.932 1.659-2.071v-0.827c-0.259-0.503-0.848-0.67-1.451-0.825 0.273-0.632 1.04-0.893 1.66-0.625v0.209c1.502 0.687 3.553 0.325 4.959-0.209 0.31 0.041 0.192 0.507 0.202 0.83 0.614 0.236 0.772-0.991 1.04-0.416-0.309 0.452-0.4 1.115-0.826 1.449zm-1.052 84.363c-3e-3 -0.011-0.01-0.017-0.014-0.025-0.67-0.784-1.175-1.735-1.799-2.559 0.628 0.823 1.129 1.773 1.799 2.559-0.096-0.274-0.294-0.445-0.367-0.744 0.073 0.295 0.272 0.469 0.368 0.744 6e-3 8e-3 0.011 0.017 0.018 0.025-7e-3 -9e-3 -0.012-0.018-0.018-0.025 3e-3 0.01 0.01 0.015 0.013 0.025zm39.944-36.992c0.918 0.259 1.644 0.698 2.061 1.448-0.609 0.213-1.319 0.332-1.858 0.625-0.111-0.308-0.304-0.523-0.411-0.832-0.036-0.511-0.036-0.992 0.208-1.241zm-36.208-42.409c-0.432-0.391-0.462-1.186-1.031-1.443-0.254-1.371 0.062-2.107 0.208-3.519-0.091-0.781 0.406-0.974 0.62-1.449 0.796 0.115 1.015-0.371 1.857-0.205h0.209v0.205c1.4 0.187 1.624 1.554 2.689 2.069 0.011 0.203 0.254 0.162 0.416 0.208-0.151 0.563 0.976-0.15 0.828 0.413 0.33 1.5-0.747 1.599-1.244 2.277-1.237 0.137-2.016-0.19-3.106-0.209-0.695 0.516 0.568 0.797 0.208 1.652h-1.654zm16.345 3.728c-0.173-0.041-0.197 0.078-0.208 0.207-0.188 0.364-0.468 0.639-0.822 0.826-0.66-0.176-0.646 0.325-1.04 0.411 0.065 0.481-0.026 0.794-0.198 1.038-0.01 0.411-0.569 0.264-0.422 0.825-0.473-0.062-0.229 0.596-0.619 0.618-0.421 0.06-0.411 0.554-0.619 0.828-0.168-0.106-0.335-0.213-0.625-0.205-0.604-0.15-1.015-0.504-1.446-0.827-0.351-0.407-0.965-0.556-1.66-0.62-1.075 0.049-1.563-0.502-2.477-0.619-0.625-0.886-1.528-1.508-3.31-1.244-0.432-0.086-0.549 0.143-0.827 0.206-0.031 0.244-0.381 0.179-0.625 0.208-0.035-0.168-0.203-0.208-0.203-0.414 0.498-0.594 0.295-1.57 0.411-2.066h0.417c0.648-0.383 1.624-0.443 2.689-0.414 0.184-0.361 0.722-0.379 1.036-0.623 1.021-0.219 1.314-1.159 1.649-2.063v-0.213h0.208c0.29-1.155 0.883-2.019 1.03-3.308v-0.413c0.549-0.294-0.162-2.916 0.631-2.277-0.017 9e-3 -0.209-5e-3 -0.209 0-0.306 3.277 0.101 0.612 0.417 0.416-0.041 0.022 0.912 1.19 0.41 0.204 0.265 0.012 0.284 0.27 0.619 0.21 0.117 0.297 0.325 0.503 0.624 0.619 0.025 0.594 0.858 0.379 1.447 0.414 0.071 0.969 0.162 1.903 0.822 2.274-5e-3 0.635 0.441 0.805 0.63 1.24v0.206c0.437 0.876 1.365 1.254 1.852 2.074 0.173 0.038 0.209 0.205 0.417 0.205 0.38 0.371 0.473 1.043 0.624 1.653-0.298 0.117-0.506 0.326-0.623 0.624zm7.655-7.862c0.498-0.683 0.609 0.754 1.447 0.413h1.029c0.134 0.429-0.253 1.361 0.215 1.447v0.414c0.105 0.621 0.496 2.642-0.823 2.897h-2.898c-0.959-0.906-1.807-1.927-2.893-2.69h-0.833l-5e-3 -5e-3c0.278-0.632-0.763-1.405 0.208-1.442h1.041c0.269-1.032-0.646-0.879-0.624-1.653 0.634-0.149 0.756 0.208 1.243 0.205 0.472 0.216 1.67 0.792 2.269 0.206m13.863 0.826h-0.208c-1.193-0.161-1.392 0.681-2.066 1.039-0.955 1.051-2.335 1.16-3.726 0.412-0.062-0.476 0.599-0.229 0.619-0.621 0.833 0.146 0.513-0.875 1.249-0.83 1.041-0.215 1.183 0.473 2.061 0.416 0.035-0.24 0.33-0.228 0.624-0.209 0.158-0.777-0.253-0.987-0.208-1.653 0.416-0.847 0.68 0.247 1.239 0.414 0.426 0.149 0.847 0.62 0.416 1.032z";

      //Main Dojo logo animation
      const sign_1 = document.getElementsByClassName("signature-1")[0]
      const sign_2 = document.getElementsByClassName("signature-2")[0]
      const sign_3 = document.getElementsByClassName("signature-3")[0]
      const sign_4 = document.getElementsByClassName("signature-4")[0]
      const sign_5 = document.getElementsByClassName("signature-5")[0]
      const sign_6 = document.getElementsByClassName("signature-6")[0]
      gsap
      .timeline({
        scrollTrigger: {
          trigger: sectionRef.current,
          start: 'top bottom',
          //end: 'bottom bottom',
          //scrub: true,
          toggleActions: "restart none none reverse"
          //markers: true,
        },
      })
      .fromTo(
        ".letter-d",
        { autoAlpha: 0, },
        { duration: 0.3, autoAlpha: 1 },
      )
      .fromTo(
        ".letter-o-1",
        { autoAlpha: 0, },
        { duration: 0.3, autoAlpha: 1 },
      )
      .fromTo(
        ".letter-j",
        { autoAlpha: 0, },
        { duration: 0.3, autoAlpha: 1 },
      )
      .fromTo(
        ".letter-o-2",
        { autoAlpha: 0, },
        { duration: 0.3, autoAlpha: 1 },
      )
      .add( function(){
        if(process.browser){
          makeitrain();
        }
       },2 )
      .to(
        ".signature-1",
        { strokeDashoffset: 0,
          duration: sign_1.dataset.duration, },0.6
      )
      .to(
        ".signature-2",
        { strokeDashoffset: 0,
          duration: sign_2.dataset.duration, },sign_1.dataset.duration+0.6
      )
      .to(
        ".signature-3",
        { strokeDashoffset: 0,
          duration: sign_3.dataset.duration, },sign_2.dataset.duration+sign_1.dataset.duration+0.6
      )
      .to(
        ".signature-4",
        { strokeDashoffset: 0,
          duration: sign_4.dataset.duration, },sign_3.dataset.duration+sign_2.dataset.duration+sign_1.dataset.duration+0.6
      )
      .to(
        ".signature-5",
        { strokeDashoffset: 0,
          duration: sign_5.dataset.duration, },sign_4.dataset.duration+sign_3.dataset.duration+sign_2.dataset.duration+sign_1.dataset.duration+0.6
      )
      .to(
        ".signature-6",
        { strokeDashoffset: 0,
          duration: sign_6.dataset.duration, },sign_5.dataset.duration+sign_4.dataset.duration+sign_3.dataset.duration+sign_2.dataset.duration+sign_1.dataset.duration+0.6
      )
      .to(
        ".signature-1",
        { strokeDashoffset: -1 * sign_1.getTotalLength(),//2.3
          duration: sign_1.dataset.duration, },2
      )
      .to(
        ".signature-2",
        { strokeDashoffset: -1 * sign_2.getTotalLength(),//.2
          duration: sign_2.dataset.duration, },4.3
      )
      .to(
        ".signature-3",
        { strokeDashoffset: -1 * sign_3.getTotalLength(),//.6
          duration: sign_3.dataset.duration, },4.5
      )
      .to(
        ".signature-4",
        { strokeDashoffset: -1 * sign_4.getTotalLength(),//.27
          duration: sign_4.dataset.duration, },5
      )
      .to(
        ".signature-5",
        { strokeDashoffset: -1 * sign_5.getTotalLength(),//.59
          duration: sign_5.dataset.duration, },5.27
      )
      .to(
        ".signature-6",
        { strokeDashoffset: -1 * sign_6.getTotalLength(),//2.9
          duration: sign_6.dataset.duration, },5
      )
      /*.fromTo(
        ".tree",
        { autoAlpha: 0, },
        { duration: 0.7, autoAlpha: 1 },1.2
      )*/
      .to(
        ".tree",
        { strokeDashoffset: 0,
          duration: 2, },1.2
      )
      .fromTo(
        ".letter-a",
        { autoAlpha: 0},
        { duration: 0.3, autoAlpha: 1 },4
      )
      .fromTo(
        ".letter-g",
        { autoAlpha: 0, },
        { duration: 0.3, autoAlpha: 1 },4.4
      )
      .fromTo(
        ".letter-e",
        { autoAlpha: 0, },
        { duration: 0.3, autoAlpha: 1 },4.9
      )
      .fromTo(
        ".letter-n",
        { autoAlpha: 0, },
        { duration: 0.3, autoAlpha: 1 },5.3
      )
      .fromTo(
        ".letter-c",
        { autoAlpha: 0, },
        { duration: 0.3, autoAlpha: 1 },5.7
      )
      .fromTo(
        ".letter-y",
        { autoAlpha: 0, },
        { duration: 0.3, autoAlpha: 1 },6.1
      )
      .to(
        ".letter-y",
        { keyframes: [
          {y:"0%",fill: "rgba(255,255,255,0)",duration: 0}, 
          {y:"-20%",fill: "rgba(255,255,255,1)",duration: 0.2},
          {y:"0%"}
        ] },6
      )
      .to(
        ".letter-c",
        { keyframes: [
          {y:"0%",fill: "rgba(255,255,255,0)",duration: 0}, 
          {y:"-20%",fill: "rgba(255,255,255,1)",duration: 0.2},
          {y:"0%"}
        ] },6.1
      )
      .to(
        ".letter-n",
        { keyframes: [
          {y:"0%",fill: "rgba(255,255,255,0)",duration: 0}, 
          {y:"-20%",fill: "rgba(255,255,255,1)",duration: 0.2},
          {y:"0%"}
        ] },6.2
      )
      .to(
        ".letter-e",
        { keyframes: [
          {y:"0%",fill: "rgba(255,255,255,0)",duration: 0}, 
          {y:"-20%",fill: "rgba(255,255,255,1)",duration: 0.2},
          {y:"0%"}
        ] },6.3
      )
      .to(
        ".letter-g",
        { keyframes: [
          {y:"0%",fill: "rgba(255,255,255,0)",duration: 0}, 
          {y:"-20%",fill: "rgba(255,255,255,1)",duration: 0.2},
          {y:"0%"}
        ] },6.4
      )
      .to(
        ".letter-a",
        { keyframes: [
          {y:"0%",fill: "rgba(255,255,255,0)",duration: 0}, 
          {y:"-20%",fill: "rgba(255,255,255,1)",duration: 0.2},
          {y:"0%"}
        ] },6.5
      )
      /*.to(
        ".tree",
        { duration: 0.3, autoAlpha: 0 },7
      )*/
      .to(
        ".tree",
        { strokeDashoffset: -1 * document.getElementsByClassName("tree")[0].getTotalLength(),
          duration: 2, },7
      )
      .to(
        ".tree",
        { strokeDashoffset: 0,
          fill: '#FFF',
          duration: 0, },9
      )
      /*.fromTo(".tree",
        { attr: { d: treestart }},
        { attr: { d: treeend }},10
      )*/
      .add( function(){
        if(process.browser){
          stoprain();
        }
      })


    }, sectionRef);
    return () => ctx.revert();
  }, []);


  //console.log("Home Hero: ", block)
  return (
  <section ref={sectionRef} className={`${styles.root} bg-themebackground-off w-full pt-60 pb-0`} onMouseEnter={() => cursorChangeHandler("peace")} onMouseLeave={() => cursorChangeHandler("default")}>
    <div ref={RainRef} id="rain" className={`${styles.rain} absolute w-full h-full top-0 left-0 z-9`}></div>

    <div className='w-full'>
      <div className={`fixed top-180 md:top-80 w-full z-5`}>
        <div ref={LogoWrapRef} className={`${styles.logo} logo w-full text-center px-0 pb-40`}>
          <div ref={LogoRef} className='w-full'><Logo className={`${styles.logosvg} w-full h-auto`} /></div>
        </div>
      </div>
      <div ref={PanelRef} className={`${styles.panel} relative w-full bg-themebackground-ff px-50 md:px-100 mt-250 pb-120 z-6`}>
        <div ref={HeadlineRef} className='w-full  text-center font-lato text-90 md:text-113 font-300 leading-none py-20'>
          {block?.headline}
        </div>
        <div className={`flex justify-center w-full text-center py-20`}>
          <div ref={DownRef} className={`${styles.arrow} text-center w-40 h-auto`}>
            <Arrow />
          </div>
        </div>
        <div ref={VideoRef} className='relative px-40 md:px-160 z-10'>
          <VideoPlayer
            image_placeholder={block.image}
            video_placeholder={block.video_embed ? block.video_embed : block.video_local?.permalink}
            video={block.video_popup_embed ? block.video_popup_embed: block.video_popup_local?.permalink}
          />
        </div>
      </div>
    </div>
  </section>
)}

export default HomeHeroBlock
